name: Validate

on:
  push:
    branches:
      - main
  pull_request:

# checks whether your Nginx container is correctly configured to reverse proxy requests  
# to the Flask application running in a separate Docker container

jobs:
  test-flask-nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Flask Docker image
        run: docker build -t flask-app ./flask

      - name: Start Flask container (Gunicorn)
        run: docker run -d --name flask-test -p 5000:5000 flask-app

      - name: Start Nginx container
        run: |
          docker run -d --name nginx-test -p 8080:80 \
            --link flask-test:web \
            -v ${{ github.workspace }}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro \
            nginx:latest

      - name: Wait for services to start
        run: sleep 5
      
      - name: List running containers
        run: docker ps -a

      - name: Nginx logs
        run: docker logs nginx-test || true

      - name: Check port mapping
        run: docker port nginx-test

      - name: Test Flask route via Nginx
        run: |
          curl -s -o response.html http://localhost:8080/
          grep "Hello, World!" response.html

      - name: Stop containers
        run: |
          docker stop nginx-test
          docker stop flask-test


# lint the docker files
  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: luke142367/Docker-Lint-Action@v1.0.0
        with:
          target: ./flask/Dockerfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


# lint the python files
  lint-pythonfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f flask/requirements.txt ]; then pip install -r flask/requirements.txt; fi

      - name: Lint with pylint
        run: |
          pylint flask/*.py
